/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 0.0;
	GRID_DUTY_CYCLE = 50;
}




SIGNAL("Clear")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Load")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Transfer")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Bit_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Bit_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Bit_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Bit_3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Carry")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Overflow")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Salida_0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Salida_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Salida_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Salida_3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Signo")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SUMAoRESTA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Zero")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("Clear")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 990.0;
	}
}
TRANSITION_LIST("Load")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
	}
}
TRANSITION_LIST("Transfer")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
	}
}
TRANSITION_LIST("Bit_0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 190.0;
	}
}
TRANSITION_LIST("Bit_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
	}
}
TRANSITION_LIST("Bit_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 75.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 75.0;
	}
}
TRANSITION_LIST("Bit_3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
	}
}
TRANSITION_LIST("Carry")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 6.973;
		LEVEL 0 FOR 99.872;
		LEVEL 1 FOR 19.717;
		LEVEL 0 FOR 52.642;
		LEVEL 1 FOR 39.911;
		LEVEL 0 FOR 7.417;
		LEVEL 1 FOR 13.838;
		LEVEL 0 FOR 6.475;
		LEVEL 1 FOR 13.553;
		LEVEL 0 FOR 38.806;
		LEVEL 1 FOR 7.358;
		LEVEL 0 FOR 12.232;
		LEVEL 1 FOR 40.963;
		LEVEL 0 FOR 6.775;
		LEVEL 1 FOR 20.03;
		LEVEL 0 FOR 59.97;
		LEVEL 1 FOR 40.919;
		LEVEL 0 FOR 39.2;
		LEVEL 1 FOR 60.692;
		LEVEL 0 FOR 19.308;
		LEVEL 1 FOR 19.792;
		LEVEL 0 FOR 40.208;
		LEVEL 1 FOR 32.464;
		LEVEL 0 FOR 48.983;
		LEVEL 1 FOR 18.345;
		LEVEL 0 FOR 14.016;
		LEVEL 1 FOR 7.401;
		LEVEL 0 FOR 18.791;
		LEVEL 1 FOR 60.692;
		LEVEL 0 FOR 13.116;
		LEVEL 1 FOR 7.628;
		LEVEL 0 FOR 18.564;
		LEVEL 1 FOR 21.436;
		LEVEL 0 FOR 18.564;
		LEVEL 1 FOR 19.792;
		LEVEL 0 FOR 33.557;
	}
}
TRANSITION_LIST("Overflow")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 5.016;
		LEVEL 0 FOR 21.816;
		LEVEL 1 FOR 11.91;
		LEVEL 0 FOR 29.309;
		LEVEL 1 FOR 18.383;
		LEVEL 0 FOR 73.297;
		LEVEL 1 FOR 6.703;
		LEVEL 0 FOR 12.754;
		LEVEL 1 FOR 7.34;
		LEVEL 0 FOR 32.667;
		LEVEL 1 FOR 7.239;
		LEVEL 0 FOR 72.754;
		LEVEL 1 FOR 7.34;
		LEVEL 0 FOR 120.304;
		LEVEL 1 FOR 19.602;
		LEVEL 0 FOR 12.754;
		LEVEL 1 FOR 7.34;
		LEVEL 0 FOR 40.017;
		LEVEL 1 FOR 12.524;
		LEVEL 0 FOR 27.763;
		LEVEL 1 FOR 19.602;
		LEVEL 0 FOR 40.205;
		LEVEL 1 FOR 12.423;
		LEVEL 0 FOR 187.577;
		LEVEL 1 FOR 19.795;
		LEVEL 0 FOR 80.205;
		LEVEL 1 FOR 19.795;
		LEVEL 0 FOR 13.394;
		LEVEL 1 FOR 6.7;
		LEVEL 0 FOR 20.017;
		LEVEL 1 FOR 13.697;
		LEVEL 0 FOR 7.28;
		LEVEL 1 FOR 12.478;
	}
}
TRANSITION_LIST("Salida_0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 7.65;
		LEVEL 0 FOR 10.826;
		LEVEL 1 FOR 7.567;
		LEVEL 0 FOR 20.202;
		LEVEL 1 FOR 19.798;
		LEVEL 0 FOR 20.202;
		LEVEL 1 FOR 19.798;
		LEVEL 0 FOR 20.202;
		LEVEL 1 FOR 19.798;
		LEVEL 0 FOR 20.202;
		LEVEL 1 FOR 12.204;
		LEVEL 0 FOR 20.027;
		LEVEL 1 FOR 7.567;
		LEVEL 0 FOR 20.202;
		LEVEL 1 FOR 19.798;
		LEVEL 0 FOR 12.52;
		LEVEL 1 FOR 59.799;
		LEVEL 0 FOR 7.883;
		LEVEL 1 FOR 19.798;
		LEVEL 0 FOR 20.202;
		LEVEL 1 FOR 12.204;
		LEVEL 0 FOR 40.027;
		LEVEL 1 FOR 7.567;
		LEVEL 0 FOR 20.202;
		LEVEL 1 FOR 19.798;
		LEVEL 0 FOR 20.202;
		LEVEL 1 FOR 12.204;
		LEVEL 0 FOR 9.739;
		LEVEL 1 FOR 10.174;
		LEVEL 0 FOR 100.201;
		LEVEL 1 FOR 7.48;
		LEVEL 0 FOR 20.202;
		LEVEL 1 FOR 12.117;
		LEVEL 0 FOR 180.201;
		LEVEL 1 FOR 7.48;
		LEVEL 0 FOR 20.202;
		LEVEL 1 FOR 19.798;
		LEVEL 0 FOR 20.202;
		LEVEL 1 FOR 19.798;
		LEVEL 0 FOR 20.202;
		LEVEL 1 FOR 19.798;
		LEVEL 0 FOR 20.202;
		LEVEL 1 FOR 13.755;
	}
}
TRANSITION_LIST("Salida_1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 5.542;
		LEVEL 0 FOR 22.274;
		LEVEL 1 FOR 39.865;
		LEVEL 0 FOR 32.465;
		LEVEL 1 FOR 19.942;
		LEVEL 0 FOR 20.058;
		LEVEL 1 FOR 19.942;
		LEVEL 0 FOR 40.058;
		LEVEL 1 FOR 27.626;
		LEVEL 0 FOR 12.427;
		LEVEL 1 FOR 7.482;
		LEVEL 0 FOR 12.554;
		LEVEL 1 FOR 59.752;
		LEVEL 0 FOR 20.159;
		LEVEL 1 FOR 27.626;
		LEVEL 0 FOR 20.075;
		LEVEL 1 FOR 19.795;
		LEVEL 0 FOR 12.557;
		LEVEL 1 FOR 7.482;
		LEVEL 0 FOR 32.465;
		LEVEL 1 FOR 27.626;
		LEVEL 0 FOR 12.427;
		LEVEL 1 FOR 19.93;
		LEVEL 0 FOR 7.718;
		LEVEL 1 FOR 19.795;
		LEVEL 0 FOR 12.504;
		LEVEL 1 FOR 67.675;
		LEVEL 0 FOR 12.325;
		LEVEL 1 FOR 7.773;
		LEVEL 0 FOR 12.336;
		LEVEL 1 FOR 19.833;
		LEVEL 0 FOR 7.759;
		LEVEL 1 FOR 12.188;
		LEVEL 0 FOR 20.164;
		LEVEL 1 FOR 7.443;
		LEVEL 0 FOR 20.205;
		LEVEL 1 FOR 12.188;
		LEVEL 0 FOR 20.164;
		LEVEL 1 FOR 7.443;
		LEVEL 0 FOR 12.504;
		LEVEL 1 FOR 47.675;
		LEVEL 0 FOR 12.325;
		LEVEL 1 FOR 7.773;
		LEVEL 0 FOR 12.28;
		LEVEL 1 FOR 7.622;
		LEVEL 0 FOR 12.325;
		LEVEL 1 FOR 7.773;
		LEVEL 0 FOR 12.28;
		LEVEL 1 FOR 7.622;
		LEVEL 0 FOR 40.126;
		LEVEL 1 FOR 12.088;
		LEVEL 0 FOR 8.01;
		LEVEL 1 FOR 11.955;
	}
}
TRANSITION_LIST("Salida_2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.639;
		LEVEL 0 FOR 14.111;
		LEVEL 1 FOR 7.478;
		LEVEL 0 FOR 12.613;
		LEVEL 1 FOR 28.101;
		LEVEL 0 FOR 31.808;
		LEVEL 1 FOR 20.052;
		LEVEL 0 FOR 28.109;
		LEVEL 1 FOR 11.8;
		LEVEL 0 FOR 8.337;
		LEVEL 1 FOR 19.18;
		LEVEL 0 FOR 53.181;
		LEVEL 1 FOR 87.573;
		LEVEL 0 FOR 31.859;
		LEVEL 1 FOR 7.387;
		LEVEL 0 FOR 40.683;
		LEVEL 1 FOR 40.071;
		LEVEL 0 FOR 11.859;
		LEVEL 1 FOR 8.004;
		LEVEL 0 FOR 19.413;
		LEVEL 1 FOR 13.085;
		LEVEL 0 FOR 27.705;
		LEVEL 1 FOR 31.754;
		LEVEL 0 FOR 7.456;
		LEVEL 1 FOR 19.97;
		LEVEL 0 FOR 12.522;
		LEVEL 1 FOR 28.322;
		LEVEL 0 FOR 11.678;
		LEVEL 1 FOR 20.052;
		LEVEL 0 FOR 7.456;
		LEVEL 1 FOR 53.085;
		LEVEL 0 FOR 27.705;
		LEVEL 1 FOR 19.18;
		LEVEL 0 FOR 13.181;
		LEVEL 1 FOR 7.436;
		LEVEL 0 FOR 11.905;
		LEVEL 1 FOR 20.052;
		LEVEL 0 FOR 7.456;
		LEVEL 1 FOR 13.258;
		LEVEL 0 FOR 7.622;
		LEVEL 1 FOR 19.09;
		LEVEL 0 FOR 13.181;
		LEVEL 1 FOR 7.663;
		LEVEL 0 FOR 11.678;
		LEVEL 1 FOR 20.593;
		LEVEL 0 FOR 19.498;
		LEVEL 1 FOR 40.4;
		LEVEL 0 FOR 20.759;
	}
}
TRANSITION_LIST("Salida_3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.969;
		LEVEL 0 FOR 22.83;
		LEVEL 1 FOR 11.962;
		LEVEL 0 FOR 28.227;
		LEVEL 1 FOR 39.718;
		LEVEL 0 FOR 51.962;
		LEVEL 1 FOR 20.004;
		LEVEL 0 FOR 40.141;
		LEVEL 1 FOR 6.969;
		LEVEL 0 FOR 13.615;
		LEVEL 1 FOR 7.309;
		LEVEL 0 FOR 12.719;
		LEVEL 1 FOR 39.247;
		LEVEL 0 FOR 7.185;
		LEVEL 1 FOR 12.798;
		LEVEL 0 FOR 40.129;
		LEVEL 1 FOR 19.942;
		LEVEL 0 FOR 48.073;
		LEVEL 1 FOR 18.983;
		LEVEL 0 FOR 40.696;
		LEVEL 1 FOR 19.304;
		LEVEL 0 FOR 41.017;
		LEVEL 1 FOR 39.464;
		LEVEL 0 FOR 19.594;
		LEVEL 1 FOR 52.869;
		LEVEL 0 FOR 88.31;
		LEVEL 1 FOR 39.744;
		LEVEL 0 FOR 19.077;
		LEVEL 1 FOR 60.406;
		LEVEL 0 FOR 13.134;
		LEVEL 1 FOR 7.61;
		LEVEL 0 FOR 18.85;
		LEVEL 1 FOR 19.925;
		LEVEL 0 FOR 21.254;
		LEVEL 1 FOR 18.746;
		LEVEL 0 FOR 13.505;
		LEVEL 1 FOR 7.08;
		LEVEL 0 FOR 13.633;
	}
}
TRANSITION_LIST("Signo")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.033;
		LEVEL 0 FOR 82.563;
		LEVEL 1 FOR 39.963;
		LEVEL 0 FOR 40.037;
		LEVEL 1 FOR 19.963;
		LEVEL 0 FOR 40.037;
		LEVEL 1 FOR 79.963;
		LEVEL 0 FOR 60.037;
		LEVEL 1 FOR 19.963;
		LEVEL 0 FOR 60.037;
		LEVEL 1 FOR 19.963;
		LEVEL 0 FOR 40.037;
		LEVEL 1 FOR 19.963;
		LEVEL 0 FOR 40.037;
		LEVEL 1 FOR 39.963;
		LEVEL 0 FOR 20.037;
		LEVEL 1 FOR 39.963;
		LEVEL 0 FOR 100.037;
		LEVEL 1 FOR 39.963;
		LEVEL 0 FOR 20.037;
		LEVEL 1 FOR 79.963;
		LEVEL 0 FOR 20.037;
		LEVEL 1 FOR 19.963;
		LEVEL 0 FOR 20.037;
		LEVEL 1 FOR 34.404;
	}
}
TRANSITION_LIST("SUMAoRESTA")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 500.0;
	}
}
TRANSITION_LIST("Zero")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 9.134;
		LEVEL 1 FOR 10.665;
		LEVEL 0 FOR 100.348;
		LEVEL 1 FOR 7.421;
		LEVEL 0 FOR 61.233;
		LEVEL 1 FOR 10.998;
		LEVEL 0 FOR 181.022;
		LEVEL 1 FOR 6.728;
		LEVEL 0 FOR 133.176;
		LEVEL 1 FOR 7.134;
		LEVEL 0 FOR 200.331;
		LEVEL 1 FOR 19.702;
		LEVEL 0 FOR 40.983;
		LEVEL 1 FOR 11.166;
		LEVEL 0 FOR 89.061;
		LEVEL 1 FOR 10.939;
		LEVEL 0 FOR 28.376;
		LEVEL 1 FOR 11.715;
		LEVEL 0 FOR 59.868;
	}
}


DISPLAY_LINE
{
	CHANNEL = "Bit_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Bit_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Bit_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Bit_3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Salida_0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Salida_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Salida_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Salida_3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Clear";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Load";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Transfer";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Carry";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Overflow";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Signo";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SUMAoRESTA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Zero";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}
TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
